!function(root,factory){"use strict";"function"==typeof define&&define.amd?define([],factory):"object"==typeof module&&module.exports?module.exports=factory():root.pipwerks=factory()}(this,(function(){"use strict";var pipwerks={UTILS:{},debug:{isActive:!1},SCORM:{version:null,handleCompletionStatus:!0,handleExitMode:!0,API:{handle:null,isFound:!1},connection:{isActive:!1},data:{completionStatus:null,exitStatus:null},debug:{}}};return pipwerks.SCORM.isAvailable=function(){return!0},pipwerks.SCORM.API.find=function(win){for(var API=null,findAttempts=0,findAttemptLimit=500,traceMsgPrefix="SCORM.API.find",trace=pipwerks.UTILS.trace,scorm=pipwerks.SCORM;!win.API&&!win.API_1484_11&&win.parent&&win.parent!=win&&findAttempts<=500;)findAttempts++,win=win.parent;if(scorm.version)switch(scorm.version){case"2004":win.API_1484_11?API=win.API_1484_11:trace("SCORM.API.find: SCORM version 2004 was specified by user, but API_1484_11 cannot be found.");break;case"1.2":win.API?API=win.API:trace("SCORM.API.find: SCORM version 1.2 was specified by user, but API cannot be found.")}else win.API_1484_11?(scorm.version="2004",API=win.API_1484_11):win.API&&(scorm.version="1.2",API=win.API);return API?(trace("SCORM.API.find: API found. Version: "+scorm.version),trace("API: "+API)):trace("SCORM.API.find: Error finding API. \nFind attempts: "+findAttempts+". \nFind attempt limit: 500"),API},pipwerks.SCORM.API.get=function(){var API=null,win=window,scorm=pipwerks.SCORM,find=scorm.API.find,trace=pipwerks.UTILS.trace;return!(API=find(win))&&win.parent&&win.parent!=win&&(API=find(win.parent)),!API&&win.top&&win.top.opener&&(API=find(win.top.opener)),!API&&win.top&&win.top.opener&&win.top.opener.document&&(API=find(win.top.opener.document)),API?scorm.API.isFound=!0:trace("API.get failed: Can't find the API!"),API},pipwerks.SCORM.API.getHandle=function(){var API=pipwerks.SCORM.API;return API.handle||API.isFound||(API.handle=API.get()),API.handle},pipwerks.SCORM.connection.initialize=function(){var success=!1,scorm=pipwerks.SCORM,completionStatus=scorm.data.completionStatus,trace=pipwerks.UTILS.trace,makeBoolean=pipwerks.UTILS.StringToBoolean,debug=scorm.debug,traceMsgPrefix="SCORM.connection.initialize ";if(trace("connection.initialize called."),scorm.connection.isActive)trace(traceMsgPrefix+"aborted: Connection already active.");else{var API=scorm.API.getHandle(),errorCode=0;if(API){switch(scorm.version){case"1.2":success=makeBoolean(API.LMSInitialize(""));break;case"2004":success=makeBoolean(API.Initialize(""))}if(success)if(null!==(errorCode=debug.getCode())&&0===errorCode){if(scorm.connection.isActive=!0,scorm.handleCompletionStatus&&(completionStatus=scorm.status("get"))){switch(completionStatus){case"not attempted":case"unknown":scorm.status("set","incomplete")}scorm.save()}}else success=!1,trace(traceMsgPrefix+"failed. \nError code: "+errorCode+" \nError info: "+debug.getInfo(errorCode));else trace(null!==(errorCode=debug.getCode())&&0!==errorCode?traceMsgPrefix+"failed. \nError code: "+errorCode+" \nError info: "+debug.getInfo(errorCode):traceMsgPrefix+"failed: No response from server.")}else trace(traceMsgPrefix+"failed: API is null.")}return success},pipwerks.SCORM.connection.terminate=function(){var success=!1,scorm=pipwerks.SCORM,exitStatus=scorm.data.exitStatus,completionStatus=scorm.data.completionStatus,trace=pipwerks.UTILS.trace,makeBoolean=pipwerks.UTILS.StringToBoolean,debug=scorm.debug,traceMsgPrefix="SCORM.connection.terminate ";if(scorm.connection.isActive){var API=scorm.API.getHandle(),errorCode=0;if(API){if(scorm.handleExitMode&&!exitStatus)if("completed"!==completionStatus&&"passed"!==completionStatus)switch(scorm.version){case"1.2":success=scorm.set("cmi.core.exit","suspend");break;case"2004":success=scorm.set("cmi.exit","suspend")}else switch(scorm.version){case"1.2":success=scorm.set("cmi.core.exit","logout");break;case"2004":success=scorm.set("cmi.exit","normal")}if(success="1.2"!==scorm.version||scorm.save()){switch(scorm.version){case"1.2":success=makeBoolean(API.LMSFinish(""));break;case"2004":success=makeBoolean(API.Terminate(""))}success?scorm.connection.isActive=!1:trace(traceMsgPrefix+"failed. \nError code: "+(errorCode=debug.getCode())+" \nError info: "+debug.getInfo(errorCode))}}else trace(traceMsgPrefix+"failed: API is null.")}else trace(traceMsgPrefix+"aborted: Connection already terminated.");return success},pipwerks.SCORM.data.get=function(parameter){var value=null,scorm=pipwerks.SCORM,trace=pipwerks.UTILS.trace,debug=scorm.debug,traceMsgPrefix="SCORM.data.get('"+parameter+"') ";if(scorm.connection.isActive){var API=scorm.API.getHandle(),errorCode=0;if(API){switch(scorm.version){case"1.2":value=API.LMSGetValue(parameter);break;case"2004":value=API.GetValue(parameter)}if(errorCode=debug.getCode(),""!==value||0===errorCode)switch(parameter){case"cmi.core.lesson_status":case"cmi.completion_status":scorm.data.completionStatus=value;break;case"cmi.core.exit":case"cmi.exit":scorm.data.exitStatus=value}else trace(traceMsgPrefix+"failed. \nError code: "+errorCode+"\nError info: "+debug.getInfo(errorCode))}else trace(traceMsgPrefix+"failed: API is null.")}else trace(traceMsgPrefix+"failed: API connection is inactive.");return trace(traceMsgPrefix+" value: "+value),String(value)},pipwerks.SCORM.data.set=function(parameter,value){var success=!1,scorm=pipwerks.SCORM,trace=pipwerks.UTILS.trace,makeBoolean=pipwerks.UTILS.StringToBoolean,debug=scorm.debug,traceMsgPrefix="SCORM.data.set('"+parameter+"') ";if(scorm.connection.isActive){var API=scorm.API.getHandle(),errorCode=0;if(API){switch(scorm.version){case"1.2":success=makeBoolean(API.LMSSetValue(parameter,value));break;case"2004":success=makeBoolean(API.SetValue(parameter,value))}success?"cmi.core.lesson_status"!==parameter&&"cmi.completion_status"!==parameter||(scorm.data.completionStatus=value):trace(traceMsgPrefix+"failed. \nError code: "+(errorCode=debug.getCode())+". \nError info: "+debug.getInfo(errorCode))}else trace(traceMsgPrefix+"failed: API is null.")}else trace(traceMsgPrefix+"failed: API connection is inactive.");return trace(traceMsgPrefix+" value: "+value),success},pipwerks.SCORM.data.save=function(){var success=!1,scorm=pipwerks.SCORM,trace=pipwerks.UTILS.trace,makeBoolean=pipwerks.UTILS.StringToBoolean,traceMsgPrefix="SCORM.data.save failed";if(scorm.connection.isActive){var API=scorm.API.getHandle();if(API)switch(scorm.version){case"1.2":success=makeBoolean(API.LMSCommit(""));break;case"2004":success=makeBoolean(API.Commit(""))}else trace(traceMsgPrefix+": API is null.")}else trace(traceMsgPrefix+": API connection is inactive.");return success},pipwerks.SCORM.status=function(action,status){var success=!1,scorm=pipwerks.SCORM,trace=pipwerks.UTILS.trace,traceMsgPrefix="SCORM.getStatus failed",cmi="";if(null!==action){switch(scorm.version){case"1.2":cmi="cmi.core.lesson_status";break;case"2004":cmi="cmi.completion_status"}switch(action){case"get":success=scorm.data.get(cmi);break;case"set":null!==status?success=scorm.data.set(cmi,status):(success=!1,trace(traceMsgPrefix+": status was not specified."));break;default:success=!1,trace(traceMsgPrefix+": no valid action was specified.")}}else trace(traceMsgPrefix+": action was not specified.");return success},pipwerks.SCORM.debug.getCode=function(){var scorm=pipwerks.SCORM,API=scorm.API.getHandle(),trace=pipwerks.UTILS.trace,code=0;if(API)switch(scorm.version){case"1.2":code=parseInt(API.LMSGetLastError(),10);break;case"2004":code=parseInt(API.GetLastError(),10)}else trace("SCORM.debug.getCode failed: API is null.");return code},pipwerks.SCORM.debug.getInfo=function(errorCode){var scorm=pipwerks.SCORM,API=scorm.API.getHandle(),trace=pipwerks.UTILS.trace,result="";if(API)switch(scorm.version){case"1.2":result=API.LMSGetErrorString(errorCode.toString());break;case"2004":result=API.GetErrorString(errorCode.toString())}else trace("SCORM.debug.getInfo failed: API is null.");return String(result)},pipwerks.SCORM.debug.getDiagnosticInfo=function(errorCode){var scorm=pipwerks.SCORM,API=scorm.API.getHandle(),trace=pipwerks.UTILS.trace,result="";if(API)switch(scorm.version){case"1.2":result=API.LMSGetDiagnostic(errorCode);break;case"2004":result=API.GetDiagnostic(errorCode)}else trace("SCORM.debug.getDiagnosticInfo failed: API is null.");return String(result)},pipwerks.SCORM.init=pipwerks.SCORM.connection.initialize,pipwerks.SCORM.get=pipwerks.SCORM.data.get,pipwerks.SCORM.set=pipwerks.SCORM.data.set,pipwerks.SCORM.save=pipwerks.SCORM.data.save,pipwerks.SCORM.quit=pipwerks.SCORM.connection.terminate,pipwerks.UTILS.StringToBoolean=function(value){var t;switch(typeof value){case"object":case"string":return/(true|1)/i.test(value);case"number":return!!value;case"boolean":return value;case"undefined":return null;default:return!1}},pipwerks.UTILS.trace=function(msg){pipwerks.debug.isActive&&window.console&&window.console.log&&window.console.log(msg)},pipwerks}));